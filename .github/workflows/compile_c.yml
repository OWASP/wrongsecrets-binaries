name: "Compile C"

on:
  workflow_dispatch:
  push:
    paths:
      - "c/**"
      - ".github/**"
  pull_request:

permissions:
  contents: read

jobs:
  build-darwin:
    name: MacOS(Intel&ARM)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
      - name: compile C binary for macOS
        run: |
          mkdir target
          echo "Compiling C for Intel Macos-X"
          (cd c && make CFLAGS+='-target x86_64-apple-macos12' OUT='../target/wrongsecrets-c')
          (cd c/advanced && make CFLAGS+='-target x86_64-apple-macos12' OUT='../../target/wrongsecrets-advanced-c')
          (cd c/challenge52 && make CFLAGS+='-target x86_64-apple-macos12' OUT='../../target/wrongsecrets-challenge52-c')
          echo "Compiling C for ARM Macos-X"
          (cd c && make CFLAGS+='-target arm64-apple-macos12' OUT='../target/wrongsecrets-c-arm')
          (cd c/advanced && make CFLAGS+='-target arm64-apple-macos12' OUT='../../target/wrongsecrets-advanced-c-arm')
          (cd c/challenge52 && make CFLAGS+='-target arm64-apple-macos12' OUT='../../target/wrongsecrets-challenge52-c-arm')
      - name: compile CTF C binary for macOS
        run: |
          echo "Generating CTF secrets..."
          ./generate_ctf_secrets.sh generate
          echo "Compiling CTF C for Intel Macos-X"
          (cd c && make CFLAGS+='-target x86_64-apple-macos12' OUT='../target/wrongsecrets-c-ctf')
          (cd c/advanced && make CFLAGS+='-target x86_64-apple-macos12' OUT='../../target/wrongsecrets-advanced-c-ctf')
          (cd c/challenge52 && make CFLAGS+='-target x86_64-apple-macos12' OUT='../../target/wrongsecrets-challenge52-c-ctf')
          echo "Compiling CTF C for ARM Macos-X"
          (cd c && make CFLAGS+='-target arm64-apple-macos12' OUT='../target/wrongsecrets-c-arm-ctf')
          (cd c/advanced && make CFLAGS+='-target arm64-apple-macos12' OUT='../../target/wrongsecrets-advanced-c-arm-ctf')
          (cd c/challenge52 && make CFLAGS+='-target arm64-apple-macos12' OUT='../../target/wrongsecrets-challenge52-c-arm-ctf')
          # Restore original files
          ./generate_ctf_secrets.sh restore
      - name: Uploading C executables
        uses: actions/upload-artifact@v5
        with:
          name: executables-C-MacOS.zip
          path: target/*
  build-linux:
    name: Linux(X86-64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Compile C binary for Linux(x64)
        run: |
          mkdir target
          echo "Compiling C for Linux-x64"
          gcc c/main.c -o target/wrongsecrets-c-linux
          gcc c/advanced/advanced.c -o target/wrongsecrets-advanced-c-linux
          gcc c/challenge52/main.c -o target/wrongsecrets-challenge52-c-linux
      - name: Compile CTF C binary for Linux(x64)
        run: |
          echo "Generating CTF secrets..."
          ./generate_ctf_secrets.sh generate
          echo "Compiling CTF C for Linux-x64"
          gcc c/main.c -o target/wrongsecrets-c-linux-ctf
          gcc c/advanced/advanced.c -o target/wrongsecrets-advanced-c-linux-ctf
          gcc c/challenge52/main.c -o target/wrongsecrets-challenge52-c-linux-ctf
          # Restore original files
          ./generate_ctf_secrets.sh restore
      - name: Uploading C executables
        uses: actions/upload-artifact@v5
        with:
          name: executables-C-linux-x64.zip
          path: target/*
  build-linux-arm:
    name: Linux(ARM64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Compile C binary for Linux(ARM)
        run: |
          mkdir target
          echo "Prepare env"
          git clone --depth 1 https://github.com/dockcross/dockcross.git
          cd dockcross
          docker run --rm dockcross/linux-arm64-lts > ./dockcross-linux-arm64-lts
          chmod +x ./dockcross-linux-arm64-lts && mv ./dockcross-linux-arm64-lts .. && cd ..
          echo "Compiling C for Linux-arm"
          ./dockcross-linux-arm64-lts bash -c '$CC c/main.c -o target/wrongsecrets-c-linux-arm'
          ./dockcross-linux-arm64-lts bash -c '$CC c/advanced/advanced.c -o target/wrongsecrets-advanced-c-linux-arm'
          ./dockcross-linux-arm64-lts bash -c '$CC c/challenge52/main.c -o target/wrongsecrets-challenge52-c-linux-arm'
      - name: Compile CTF C binary for Linux(ARM)
        run: |
          echo "Generating CTF secrets..."
          ./generate_ctf_secrets.sh generate
          echo "Compiling CTF C for Linux-arm"
          ./dockcross-linux-arm64-lts bash -c '$CC c/main.c -o target/wrongsecrets-c-linux-arm-ctf'
          ./dockcross-linux-arm64-lts bash -c '$CC c/advanced/advanced.c -o target/wrongsecrets-advanced-c-linux-arm-ctf'
          ./dockcross-linux-arm64-lts bash -c '$CC c/challenge52/main.c -o target/wrongsecrets-challenge52-c-linux-arm-ctf'
          # Restore original files
          ./generate_ctf_secrets.sh restore
      - name: Uploading executables
        uses: actions/upload-artifact@v5
        with:
          name: executables-C-linux-ARM.zip
          path: target/*
  build-windows:
    name: Windows(x86-64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Compile C binary for Windows
        run: |
          mkdir target
          echo "Prepare env"
          git clone --depth 1 https://github.com/dockcross/dockcross.git
          cd dockcross
          docker run --rm dockcross/windows-static-x64 > ./dockcross-windows-static-x64
          chmod +x ./dockcross-windows-static-x64 && mv ./dockcross-windows-static-x64 .. && cd ..
          echo "Compiling C for Windows"
          ./dockcross-windows-static-x64 bash -c '$CC c/main.c -o target/wrongsecrets-c-windows.exe'
          ./dockcross-windows-static-x64 bash -c '$CC c/advanced/advanced.c -o target/wrongsecrets-advanced-c-windows.exe'
          ./dockcross-windows-static-x64 bash -c '$CC c/challenge52/main.c -o target/wrongsecrets-challenge52-c-windows.exe'
      - name: Compile CTF C binary for Windows
        run: |
          echo "Generating CTF secrets..."
          ./generate_ctf_secrets.sh generate
          echo "Compiling CTF C for Windows"
          ./dockcross-windows-static-x64 bash -c '$CC c/main.c -o target/wrongsecrets-c-windows-ctf.exe'
          ./dockcross-windows-static-x64 bash -c '$CC c/advanced/advanced.c -o target/wrongsecrets-advanced-c-windows-ctf.exe'
          ./dockcross-windows-static-x64 bash -c '$CC c/challenge52/main.c -o target/wrongsecrets-challenge52-c-windows-ctf.exe'
          # Restore original files
          ./generate_ctf_secrets.sh restore
      - name: Uploading executables
        uses: actions/upload-artifact@v5
        with:
          name: executables-C-Windows.zip
          path: target/*
  build-musl-arm:
    name: Musl(ARM)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Compile C binary for Musl(ARM)
        run: |
          mkdir target
          echo "Prepare env"
          git clone --depth 1 https://github.com/dockcross/dockcross.git
          cd dockcross
          docker run --rm dockcross/linux-arm64-musl > ./dockcross-linux-arm64-musl
          chmod +x ./dockcross-linux-arm64-musl && mv ./dockcross-linux-arm64-musl .. && cd ..
          echo "Compiling C for Arm Musl"
          ./dockcross-linux-arm64-musl bash -c '$CC c/main.c -o target/wrongsecrets-c-linux-musl-arm'
          ./dockcross-linux-arm64-musl bash -c '$CC c/advanced/advanced.c -o target/wrongsecrets-advanced-c-linux-musl-arm'
          ./dockcross-linux-arm64-musl bash -c '$CC c/challenge52/main.c -o target/wrongsecrets-challenge52-c-linux-musl-arm'
      - name: Compile CTF C binary for Musl(ARM)
        run: |
          echo "Generating CTF secrets..."
          ./generate_ctf_secrets.sh generate
          echo "Compiling CTF C for Arm Musl"
          ./dockcross-linux-arm64-musl bash -c '$CC c/main.c -o target/wrongsecrets-c-linux-musl-arm-ctf'
          ./dockcross-linux-arm64-musl bash -c '$CC c/advanced/advanced.c -o target/wrongsecrets-advanced-c-linux-musl-arm-ctf'
          ./dockcross-linux-arm64-musl bash -c '$CC c/challenge52/main.c -o target/wrongsecrets-challenge52-c-linux-musl-arm-ctf'
          # Restore original files
          ./generate_ctf_secrets.sh restore
      - name: Uploading executables
        uses: actions/upload-artifact@v5
        with:
          name: executables-C-Musl-ARM.zip
          path: target/*
  build-musl-x64:
    name: Musl(X86-64)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
      - name: Compile C binary for Musl(x64)
        run: |
          mkdir target
          echo "Prepare env"
          brew install FiloSottile/musl-cross/musl-cross
          ln -s /usr/local/opt/musl-cross/bin/x86_64-linux-musl-gcc /usr/local/bin/musl-gcc
          echo "Compiling C for X64 Musl"
          x86_64-linux-musl-gcc c/main.c -o target/wrongsecrets-c-linux-musl
          x86_64-linux-musl-gcc c/advanced/advanced.c -o target/wrongsecrets-advanced-c-linux-musl
          x86_64-linux-musl-gcc c/challenge52/main.c -o target/wrongsecrets-challenge52-c-linux-musl
      - name: Compile CTF C binary for Musl(x64)
        run: |
          echo "Generating CTF secrets..."
          ./generate_ctf_secrets.sh generate
          echo "Compiling CTF C for X64 Musl"
          x86_64-linux-musl-gcc c/main.c -o target/wrongsecrets-c-linux-musl-ctf
          x86_64-linux-musl-gcc c/advanced/advanced.c -o target/wrongsecrets-advanced-c-linux-musl-ctf
          x86_64-linux-musl-gcc c/challenge52/main.c -o target/wrongsecrets-challenge52-c-linux-musl-ctf
          # Restore original files
          ./generate_ctf_secrets.sh restore
      - name: Uploading executables
        uses: actions/upload-artifact@v5
        with:
          name: executables-C-Musl-x64.zip
          path: target/*
