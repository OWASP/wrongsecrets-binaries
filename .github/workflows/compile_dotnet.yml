name: dotnet package

on:
    workflow_dispatch:
    push:
      paths:
        - 'dotnet/**'
        - '.github/**'
    pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [ 'osx-x64','osx-arm64','win-x64','win-arm64','linux-x64','linux-arm64','linux-musl-x64','linux-musl-arm64']
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Build and Package ${{ matrix.runtime }}
        run: |
            cd dotnet/dotnetproject
            dotnet build dotnetproject.csproj --runtime ${{ matrix.runtime }} --self-contained true
            dotnet publish dotnetproject.csproj --runtime ${{ matrix.runtime }} /p:PublishSingleFile=true
            ls /home/runner/work/wrongsecrets-binaries/wrongsecrets-binaries/dotnet/dotnetproject/bin/Release/net8.0/${{ matrix.runtime }}/publish/
      - name: Uploading executables
        uses: actions/upload-artifact@v4
        with:
          name: executable-dotnet-${{ matrix.runtime }}
          path: /home/runner/work/wrongsecrets-binaries/wrongsecrets-binaries/dotnet/dotnetproject/bin/Release/net8.0/${{ matrix.runtime }}/publish/

  # Sign and notarize macOS binaries
  sign-macos-dotnet:
    name: Sign and Notarize macOS .NET Binaries
    needs: build
    uses: ./.github/workflows/macos-sign-notarize.yml
    strategy:
      matrix:
        runtime: ["osx-x64", "osx-arm64"]
    with:
      binary_path: /home/runner/work/wrongsecrets-binaries/wrongsecrets-binaries/dotnet/dotnetproject/bin/Release/net8.0/${{ matrix.runtime }}/publish/
      binary_name: executable-dotnet-${{ matrix.runtime }}
    secrets:
      APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
      APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
      APPLE_DEVELOPER_ID: ${{ secrets.APPLE_DEVELOPER_ID }}
      APPLE_APP_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
